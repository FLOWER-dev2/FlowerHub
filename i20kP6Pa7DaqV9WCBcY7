local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "üí´ Flower Hub 0.9.4",
    SubTitle = "by @f.l_x9wer",
    TabWidth = 160, 
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Normal Theme",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "globe" }),
    Player = Window:AddTab({ Title = "Player", Icon = "user" }),
    Gunkit = Window:AddTab({ Title = "Gunkit", Icon = "swords" }),
    Others = Window:AddTab({ Title = "Others", Icon = "zoom-in" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

    Fluent:Notify({
        Title = "Notification",
        Content = "ÏÇ¨Ïö©Ìï¥Ï£ºÏÖîÏÑú Í∞êÏÇ¨Ìï©ÎãàÎã§!",
        Duration = 5 -- Set to nil to make the notification not disappear
    })

-----------------Main--------------------------
local CEset = false
local Events = {}
local Player = game.Players.LocalPlayer

local Section = Tabs.Main:AddSection("Scripts")

Tabs.Main:AddButton({
    Title = "Dex",
    Description = "DexÎ•º Ïã§ÌñâÌï©ÎãàÎã§.",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Flower-Devloper/robloxscript/refs/heads/main/Protected_7173160198086914.txt"))()
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})

Tabs.Main:AddButton({
    Title = "Infinite Yield",
    Description = "Infinite YieldÎ•º Ïã§ÌñâÌï©ÎãàÎã§.",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})

Tabs.Main:AddButton({
    Title = "OwlHub",
    Description = "OwlHubÎ•º Ïã§ÌñâÌï©ÎãàÎã§.",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})

local Section = Tabs.Main:AddSection("Game")

Tabs.Main:AddButton({
    Title = "Rejoin",
    Description = "Í≤åÏûÑÏùÑ Ïû¨Ï†ëÌï©ÎãàÎã§.",
    Callback = function()
    local player = game:GetService("Players").LocalPlayer
    local placeId = game.PlaceId
    local jobId = game.JobId
    game:GetService("TeleportService"):TeleportToPlaceInstance(placeId, jobId, player)
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})

Tabs.Main:AddButton({
    Title = "Self Kick",
    Description = "Ïä§Ïä§Î°úÎ•º Í≤åÏûÑÏóêÏÑú Ï∂îÎ∞©Ìï©ÎãàÎã§.",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/FLOWERDEVELOPERR3/Script/refs/heads/main/Protected_7715213063064574.txt"))()
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})
-----------------------------------Player---------------------

local Slider = Tabs.Player:AddSlider("Slider", {
    Title = "WalkSpeed",
    Description = "WalkSpeedÎ•º ÏÑ§Ï†ïÌï©ÎãàÎã§.",
    Default = 2,
    Min = 5,
    Max = 300,
    Rounding = 1,
    Callback = function(Value)
        print("Slider was changed:", Value)
    end
})

Slider:OnChanged(function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value;
end)

Slider:SetValue(16)

local Slider = Tabs.Player:AddSlider("Slider", {
    Title = "JumpPower",
    Description = "JumpPowerÎ•º ÏÑ§Ï†ïÌï©ÎãàÎã§.",
    Default = 2,
    Min = 5,
    Max = 300,
    Rounding = 1,
    Callback = function(Value)
        print("Slider was changed:", Value)
    end
})

Slider:OnChanged(function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value;
    game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true;
end)

Slider:SetValue(45)

Tabs.Player:AddButton({
    Title = "ÌÅ¥Î¶≠ TP",
    Description = "ÌÅ¥Î¶≠ÌïòÏó¨ TPÌïòÎäî Ìà¥ÏùÑ ÏÉùÏÑ±Ìï©ÎãàÎã§.",
    Callback = function()
mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "TP TOOL"
tool.Activated:connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
Fluent:Notify({
    Title = "Notification",
    Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
    Duration = 5
})
    end
})

Tabs.Player:AddButton({
    Title = "fling All",
    Description = "Î™®Îì†ÏÇ¨ÎûåÏùÑ ÎÇ†Î¶ΩÎãàÎã§.",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/zqyDSUWX"))()
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

local Toggle = Tabs.Player:AddToggle("NoClipToggle", {
    Title = "NoClip",
    Default = false
})

local noclipEnabled = false

Toggle:OnChanged(function(state)
    noclipEnabled = state
end)

game:GetService("RunService").Stepped:Connect(function()
    if noclipEnabled then
        local character = game:GetService("Players").LocalPlayer.Character
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end
end)

local Toggle = Tabs.Player:AddToggle("FlyToggle", {Title = "Fly Mode", Default = false}) 
local flying, Flyspeed, bodyVelocity, bodyGyro = false, 50, nil, nil

Toggle:OnChanged(function(state)
    flying = state
    local hrp = game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if flying and hrp then
        bodyVelocity = Instance.new("BodyVelocity", hrp) bodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5) bodyVelocity.Velocity = Vector3.zero
        bodyGyro = Instance.new("BodyGyro", hrp) bodyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5) bodyGyro.CFrame = hrp.CFrame
    else
        if bodyVelocity then bodyVelocity:Destroy() end if bodyGyro then bodyGyro:Destroy() end
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if flying and bodyVelocity then
        local uis = game:GetService("UserInputService")
        local hrp = game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local direction = Vector3.zero
        if uis:IsKeyDown(Enum.KeyCode.W) then direction = direction + workspace.CurrentCamera.CFrame.LookVector end
        if uis:IsKeyDown(Enum.KeyCode.S) then direction = direction - workspace.CurrentCamera.CFrame.LookVector end
        if uis:IsKeyDown(Enum.KeyCode.A) then direction = direction - workspace.CurrentCamera.CFrame.RightVector end
        if uis:IsKeyDown(Enum.KeyCode.D) then direction = direction + workspace.CurrentCamera.CFrame.RightVector end
        if uis:IsKeyDown(Enum.KeyCode.Space) then direction = direction + Vector3.new(0, 1, 0) end
        if uis:IsKeyDown(Enum.KeyCode.LeftShift) then direction = direction - Vector3.new(0, 1, 0) end
        if hrp and direction.Magnitude > 0 then bodyVelocity.Velocity = direction.Unit * Flyspeed else bodyVelocity.Velocity = Vector3.zero end
    end
end)

local Input = Tabs.Player:AddInput("Input", {
    Title = "Fly ÏÜçÎèÑ",
    Default = "Ïó¨Í∏∞ÏóêÎã§Í∞Ä ÏûÖÎ†•",
    Placeholder = "Placeholder",
    Numeric = true, -- Only allows numbers
    Finished = true, -- Only calls callback when you press enter
    Callback = function(Value)
        Flyspeed = Value
    end
})

Input:OnChanged(function()
    print("Input updated:", Input.Value)
end)

local Toggle = Tabs.Player:AddToggle("InfiniteJumpToggle", {Title = "Infinite Jump", Default = false})
local InfiniteJumpEnabled = false
local jumpConnection

Toggle:OnChanged(function(state)
    InfiniteJumpEnabled = state
    if InfiniteJumpEnabled then
        if not jumpConnection then
            jumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
                local humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then humanoid:ChangeState("Jumping") end
            end)
        end
    else
        if jumpConnection then
            jumpConnection:Disconnect()
            jumpConnection = nil
        end
    end
end)

Options.InfiniteJumpToggle:SetValue(false)
-----------------------------------Gunkit------------------------
local Section = Tabs.Gunkit:AddSection("ACS 2.0.1")

Tabs.Gunkit:AddButton({
    Title = "2.0.1 Server Nuke",
    Description = "ÏÑúÎ≤ÑÎ•º ÌÑ∞Ìä∏Î¶ΩÎãàÎã§.",
    Callback = function()
        while task.wait() do
            for _, player in next, game.Players:GetPlayers() do
               game:GetService("ReplicatedStorage")["ACS_Engine"].Events.Suppression:FireServer(player, 666, 666, 666)
            end
          end
          Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

Tabs.Gunkit:AddButton({
    Title = "2.0.1 Kill All",
    Description = "Î™®Îì†ÏÇ¨ÎûåÏùÑ Ï£ΩÏûÖÎãàÎã§.",
    Callback = function()
        local Services = {
            ReplicatedStorage = game:GetService("ReplicatedStorage");
            Players = game:GetService("Players");
            }
            local Player = Services.Players.LocalPlayer
            local ACSMain = Services.ReplicatedStorage.ACS_Engine
            local Events = ACSMain.Events
            
            local ID = Events.AcessId:InvokeServer(Player.UserId)
            local RealID = ID.."-"..Player.UserId
            
            local FoundAndDone = false
            
            local ModTable = {
            
            camRecoilMod = {
            RecoilTilt = 1,
            RecoilUp = 1,
            RecoilLeft = 1,
            RecoilRight = 1
            }
            
            ,gunRecoilMod= {
            RecoilUp = 1,
            RecoilTilt = 1,
            RecoilLeft = 1,
            RecoilRight = 1
            }
            
            ,ZoomValue = 70
            ,Zoom2Value = 70
            ,AimRM = 1
            ,SpreadRM = 1
            ,DamageMod = 1
            ,minDamageMod = 1
            
            ,MinRecoilPower = 1
            ,MaxRecoilPower = 1
            ,RecoilPowerStepAmount = 1
            
            ,MinSpread = 1
            ,MaxSpread = 1
            ,AimInaccuracyStepAmount = 1
            ,AimInaccuracyDecrease = 1
            ,WalkMult = 1
            ,adsTime = 1
            ,MuzzleVelocity = 1
            }  
            
            for k, a in pairs(workspace:GetDescendants()) do
            if a:IsA("Humanoid") then
            if Services.Players:GetPlayerFromCharacter(a.Parent) then
                print(a.Parent)
            for i, v in pairs(Services.Players:GetDescendants()) do
            if v:IsA("Tool") then
            if v:FindFirstChild("ACS_Settings") then
            local Tool = v
            FoundAndDone = true
            while wait() do
            if a.Health > 0 then
            if Player.Character.Humanoid.Health > 0 then
            Events.Damage:InvokeServer(Tool, a, 15, 1, require(v:FindFirstChild("ACS_Settings")), ModTable, nil, nil, RealID)
            end
            else
            break
            end
            end
            end
            end
            if FoundAndDone then
            FoundAndDone = false
            break
            end
            end
            end
            end
            end
            Fluent:Notify({
                Title = "Notification",
                Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
                Duration = 5 -- Set to nil to make the notification not disappear
            })
    end
})

Tabs.Gunkit:AddButton({
    Title = "2.0.1 Fall All",
    Description = "Î™®ÎëêÎ•º Îñ®Ïñ¥Ìä∏Î¶ΩÎãàÎã§.",
    Callback = function()
        local cFrame = CFrame.new(0,0,0)


        local Size = {
         X = 2000,
         Y = 2000,
         Z = 2000
        }
        game:GetService('ReplicatedStorage')['ACS_Engine'].Events.Breach:InvokeServer(3,{Fortified={},Destroyable=workspace},CFrame.new(),CFrame.new(),{CFrame=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*cFrame,Size=Size})
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

local Section = Tabs.Gunkit:AddSection("ACS 1.7.5")

Tabs.Gunkit:AddButton({
    Title = "1.7.5 Kill All",
    Description = "Î™®Îì† ÌîåÎ†àÏù¥Ïñ¥Î•º Ï£ΩÏûÖÎãàÎã§",
    Callback = function()
        game:GetService('ReplicatedStorage')['ACS_Engine'].Eventos.Damage:FireServer(game.Players.LocalPlayer.Character.Humanoid, math.huge, 0, 0)
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

Tabs.Gunkit:AddButton({
    Title = "1.7.5 Heal",
    Description = "Ï≤¥Î†•ÏùÑ ÌöåÎ≥µÌï©ÎãàÎã§.",
    Callback = function()
        game:GetService('ReplicatedStorage')['ACS_Engine'].Eventos.Damage:FireServer(game.Players.LocalPlayer.Character.Humanoid, -50, 0, 0)
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

Tabs.Gunkit:AddButton({
    Title = "1.7.5 God Mod",
    Description = "Ï≤¥Î†•Ïù¥ Î¨¥ÌïúÏù¥ Îê©ÎãàÎã§.",
    Callback = function()
        game:GetService('ReplicatedStorage')['ACS_Engine'].Eventos.Damage:FireServer(game.Players.LocalPlayer.Character.Humanoid, -math.huge, 0, 0)
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

Tabs.Gunkit:AddButton({
    Title = "1.7.5 Server Nuke",
    Description = "ÏÑúÎ≤ÑÎ•º ÌÑ∞Ìä∏Î¶ΩÎãàÎã§.",
    Callback = function()
        while task.wait() do

            for i = 1, 30 do
                game:GetService('ReplicatedStorage')['ACS_Engine'].Eventos.ServerBullet:FireServer(Vector3.new(0/0/0),Vector3.new(0/0/0))
            end
         end
         Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

local Section = Tabs.Gunkit:AddSection("Carbon Engine")

Tabs.Gunkit:AddButton({
    Title = "Carbon Ïù¥Î≤§Ìä∏ Í≤ΩÎ°ú ÏÑ§Ï†ï",
    Description = "Ïù¥Î≤§Ìä∏Ïùò Í≤ΩÎ°úÎ•º ÏÑ§Ï†ïÌï©ÎãàÎã§. ",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local CResource = ReplicatedStorage:WaitForChild("CarbonResource", 3)
        local Players = game:GetService("Players")
        Players.LocalPlayer.Character.Humanoid.Health = 0
        task.wait(0.3)
        for idx, remote in pairs(CResource.Events:GetChildren()) do
            Events[remote.Name] = remote
        end
        print(Events["DamageEvent"])
        CEset = true
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

Tabs.Gunkit:AddButton({
    Title = "Carbon Kill All",
    Description = "Î™®Îì† ÌîåÎ†àÏù¥Ïñ¥Î•º Ï£ΩÏûÖÎãàÎã§",
    Callback = function()
        local Players = game:GetService("Players")

        for idx, plr in pairs(Players:GetPlayers()) do
            if plr ~= Players.LocalPlayer then
                Events["DamageEvent"]:FireServer(plr.Character:FindFirstChild("Humanoid"), 100000, "Torso", {'nil','Auth','nil','nil'})
            end
        end
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

Tabs.Gunkit:AddButton({
    Title = "Carbon Ex All",
    Description = "Î™®Îì† ÌîåÎ†àÏù¥Ïñ¥Î•º ÌÑ∞Ìä∏Î¶ΩÎãàÎã§.",
    Callback = function()
        local Players = game:GetService("Players")
        if CEset then
            local allPlayers = Players:GetPlayers()
            for _, p in pairs(allPlayers) do
                if p ~= game.Players.LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                    local playerPosition = p.Character.HumanoidRootPart.Position
                    if Events["ExplosiveEvent"] then
                        Events["ExplosiveEvent"]:FireServer("Xsi-On-Top", playerPosition, 50000, 10, 10, nil, nil, nil, nil, nil, nil, nil, "Auth")
                    else
                        warn("ExplosiveEvent not found in Events folder.")
                    end
                end
            end
        end
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})

local Section = Tabs.Gunkit:AddSection("Classic Sword (Í±¥ÌÇ∑ÏïÑÎãò)")

Tabs.Gunkit:AddButton({
    Title = "Classic Sword Kill all",
    Description = "Classic SwordÍ∞Ä ÏûàÎäîÍ≥≥ÏóêÏÑú ÏÇ¨ÎûåÏùÑ Î™®Îëê Ï£ΩÏûÖÎãàÎã§.",
    Callback = function()
        loadstring
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§!",
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    end
})
-----------------------------------Others--------------------------
local Section = Tabs.Others:AddSection("Untel's Game")
Section:AddParagraph({
    Title = "Ïö¥ÌÖåÎ•¥Í≤åÏûÑÏùò Ïä§ÌÅ¨Î¶ΩÌä∏ÏûÖÎãàÎã§."
})

local Toggle = Tabs.Others:AddToggle("AutoEquipPickUp", {Title = "Ï¥ù ÏûêÎèô Ï§çÍ∏∞", Default = false})
local autoEquipEnabled = false

Toggle:OnChanged(function(state)
    autoEquipEnabled = state
end)

game:GetService("RunService").Stepped:Connect(function()
    if autoEquipEnabled then
        local p1 = workspace:FindFirstChild("P1")
        local character = game:GetService("Players").LocalPlayer.Character
        local humanoid = character and character:FindFirstChild("Humanoid")
        local player = game:GetService("Players"):FindFirstChild("FLOWER_777OSP")
        if p1 and character then
            if player then
                task.wait(0.01)
                if p1.Parent ~= workspace then
                    return
                end
            end
            if humanoid then
                humanoid:EquipTool(p1)
            end
        end
    end
end)

local Toggle = Tabs.Others:AddToggle("AutoEquipBombPickUp", {Title = "Ìè≠ÌÉÑ ÏûêÎèôÏ§çÍ∏∞", Default = false})
local autoEquipEnabled = false

Toggle:OnChanged(function(state)
    autoEquipEnabled = state
end)

game:GetService("RunService").Stepped:Connect(function()
    if autoEquipEnabled then
        local Bomb = workspace:FindFirstChild("Bomb")
        local character = game:GetService("Players").LocalPlayer.Character
        local humanoid = character and character:FindFirstChild("Humanoid")
        local player = game:GetService("Players"):FindFirstChild("FLOWER_777OSP")
        if Bomb and character then
            if player then
                task.wait(0.01)
                if Bomb.Parent ~= workspace then
                    return
                end
            end
            if humanoid then
                humanoid:EquipTool(Bomb)
            end
        end
    end
end)

local Section = Tabs.Others:AddSection("Fisch")
Section:AddParagraph({
    Title = "FischÏùò Ïä§ÌÅ¨Î¶ΩÌä∏ÏûÖÎãàÎã§."
})

Tabs.Others:AddButton({
    Title = "Nomal Hub",
    Description = "Nomal HubÎ•º Ïã§ÌñâÌï©ÎãàÎã§.",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Flower-Devloper/fish_script/refs/heads/main/fishScript.lua"))()
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})

local Section = Tabs.Others:AddSection("Í≤ÄÏó¥ÏóÜÎäî Í≤åÏûÑ")
Section:AddParagraph({
    Title = "Í≤ÄÏó¥ÏóÜÎäî Í≤åÏûÑÏùò Ïä§ÌÅ¨Î¶ΩÌä∏ÏûÖÎãàÎã§."
})

Tabs.Others:AddButton({
    Title = "ÌëúÏßÄÌåê Ï°∞Ï¢Ö",
    Description = "ÌëúÏßÄÌåêÏùÑ Ï°∞Ï¢ÖÌïòÎäî Ïä§ÌÅ¨Î¶ΩÌä∏Î•º Ïã§ÌñâÌï©ÎãàÎã§.",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Flower-Devloper/robloxscript2/refs/heads/main/%ED%91%9C%EC%A7%80%ED%8C%90.lua"))()
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})

local Section = Tabs.Others:AddSection("ÌîÑÎ¶¨Ï¶å ÎùºÏù¥ÌîÑ")
Section:AddParagraph({
    Title = "ÌîÑÎ¶¨Ï¶å ÎùºÏù¥ÌîÑÏùò Ïä§ÌÅ¨Î¶ΩÌä∏ÏûÖÎãàÎã§."
})

Tabs.Others:AddButton({
    Title = "AK47 ÏñªÍ∏∞",
    Description = "AK47 ÏùÑ ÏñªÏäµÎãàÎã§.",
    Callback = function()
        local character = Player.Character or Player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local targetPosition = Vector3.new(-936, 93, 2056)
        local originalPosition = humanoidRootPart.Position
        local function teleportToPosition(position)
            humanoidRootPart.CFrame = CFrame.new(position)
        end
        local function hasAK47()
            for _, item in pairs(Player.Backpack:GetChildren()) do
                if item.Name == "AK-47" then
                    return true
                end
            end
            return false
        end
        local function performAction()
            local ak47Item = workspace.Prison_ITEMS.giver:FindFirstChild("AK-47")
            if ak47Item and ak47Item:IsA("Model") and ak47Item:FindFirstChild("ITEMPICKUP") then
                local args = { ak47Item.ITEMPICKUP }
                workspace.Remote.ItemHandler:InvokeServer(unpack(args))
            else
                warn("AK-47 item not found or ITEMPICKUP not available.")
            end
        end
        local function returnToOriginalPosition()
            humanoidRootPart.CFrame = CFrame.new(originalPosition)
        end
        local function teleportAndPerformAction()
            teleportToPosition(targetPosition)
            wait(0.1)
            while not hasAK47() do
                performAction()
                wait(0.1)
            end
            returnToOriginalPosition()
        end
        teleportAndPerformAction()
        Fluent:Notify({
			Title = "Notification",
			Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
			Duration = 5
		})
    end
})

Tabs.Others:AddButton({
    Title = "Kill Aura",
    Description = "Ï£ºÎ≥Ä ÏÇ¨ÎûåÎì§ÏùÑ Ï£ΩÏûÖÎãàÎã§.",
    Callback = function()
        Fluent:Notify({
            Title = "Notification",
            Content = "ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÏóàÏäµÎãàÎã§.",
            SubContent = "KÎ•º ÎàåÎü¨ ÌÜ†Í∏Ä",
            Duration = 5
        })
        loadstring(game:HttpGet("https://pastebin.com/raw/GrFbCXis"))()
    end
})


local Section = Tabs.Others:AddSection("Í∞ïÏ≤†Î∂ÄÎåÄ")
Section:AddParagraph({
    Title = "Í∞ïÏ≤†Î∂ÄÎåÄÏùò Ïä§ÌÅ¨Î¶ΩÌä∏ÏûÖÎãàÎã§."
})

local Toggle = Tabs.Others:AddToggle("AutoEquipFDFickUp", {Title = "ÌäπÏßÑÍ∂å ÏûêÎèôÏ§çÍ∏∞", Default = false})
local autoEquipEnabled = false

Toggle:OnChanged(function(state)
    autoEquipEnabled = state
end)

game:GetService("RunService").Stepped:Connect(function()
    if autoEquipEnabled then
        local XDF = workspace:FindFirstChild("34efw@#$%R#$@R%wasfdqw#$t??")
        local FDF = game:GetService("Players").LocalPlayer.Character
        local humanoid = FDF and FDF:FindFirstChild("Humanoid")
        local player = game:GetService("Players"):FindFirstChild("FLOWER_777OSP")
        if XDF and FDF then
            if player then
                task.wait(0.01)
                if XDF.Parent ~= workspace then
                    return
                end
            end
            if humanoid then
                humanoid:EquipTool(XDF)
            end
        end
    end
end)
-----------------------Settings----------------

local Section = Tabs.Settings:AddSection("Discord")

Tabs.Settings:AddButton({
    Title = "Discord Server",
    Description = "ÎîîÏä§ÏΩîÎìú ÏÑúÎ≤Ñ ÎßÅÌÅ¨Î•º Î≥µÏÇ¨Ìï©ÎãàÎã§.",
    Callback = function()
        local textToCopy = "https://discord.gg/FvnPPmbFyR"
        if setclipboard then
            setclipboard(textToCopy)
            Fluent:Notify({
                Title = "Notification",
                Content = "ÌÖçÏä§Ìä∏Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§!",
                Duration = 5
            })
        else
            Fluent:Notify({
                Title = "Error",
                Content = "ÌÅ¥Î¶ΩÎ≥¥Îìú Î≥µÏÇ¨Î•º ÏßÄÏõêÌïòÏßÄ ÏïäÎäî ÌôòÍ≤ΩÏûÖÎãàÎã§.",
                Duration = 5
            })
        end
    end
})

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Notification",
    Content = "Ïä§ÌÅ¨Î¶ΩÌä∏Í∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Î°úÎìúÎêòÏóàÏäµÎãàÎã§.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
